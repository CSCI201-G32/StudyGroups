{"version":3,"sources":["components/InputField/DaySelection.js","components/InputField/TimeSelection.js","components/InputField/DayTimeSelection.js","components/InputField/DayTimeComp.js","features/StudyGroupManagement/components/StudyGroupForm/StudyGroupForm.js","features/StudyGroupManagement/views/CreateStudyGroupPage.js","features/StudyGroupManagement/views/FullStudyPage.js","features/StudyGroupManagement/components/StudyGroupWidget.js","features/StudyGroupManagement/views/AllStudyGroups.js","features/LoginRegistration/views/HomePage.js","features/LoginRegistration/views/RegisterPage.js","features/LoginRegistration/views/LoginPage.js","features/LoginRegistration/views/GuestPage.js","App.js","utils/reportWebVitals.js","index.js"],"names":["DaySelection","_ref","day","setDay","React","createElement","className","name","id","value","onChange","e","target","TimeSelection","time","setTime","type","DayTimeSelection","onAddSelection","useState","onClick","handleAddMeetingTime","DayTimeComp","meetingTimes","onAddMeetingTime","style","display","length","map","meetingTime","index","key","concat","StudyGroupForm","groupName","onGroupNameChange","courses","onCourseInputChange","onAddCourse","newCourse","location","onLocationChange","privacy","onPrivacyChange","code","setCode","onSubmit","preventDefault","callback","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","console","log","responseText","responseData","JSON","parse","Error","formData","URLSearchParams","append","open","setRequestHeader","send","toString","fetchStudyGroup","error","alert","placeholder","required","course","substring","CreateStudyGroupPage","setGroupName","setCourses","setNewCourse","setMeetingTimes","setLocation","setPrivacy","navigate","useNavigate","event","newValue","replace","toUpperCase","handleAddCourse","prevMeetingTimes","handleSubmit","studyGroupData","undefined","stringify","onSuccess","sendDataToBackend","FullStudyPage","useParams","groupInfo","setGroupInfo","useEffect","data","StudyGroupWidget","isPrivate","toLowerCase","handleClick","FontAwesomeIcon","icon","faLock","faLockOpen","faLocationDot","AllStudyGroups","searchTerm","setSearchTerm","selectedDays","setSelectedDays","Mon","Tues","Weds","Thurs","Fri","Sat","Sun","queryResults","setQueryResults","handleDayChange","prevDays","handlePrivacyChange","callbackFunction","Array","isArray","debouncedSearch","useCallback","debounce","_ref2","options","method","headers","body","fetch","then","response","ok","json","catch","Object","entries","filter","_ref3","isSelected","_ref4","handleCreateClick","group","includes","checked","htmlFor","HomePage","handleRegister","handleLogin","handleGuest","RegisterPage","fname","setFname","lname","setLname","major","setMajor","email","setEmail","password","setPassword","async","xhr","DONE","document","cookie","requestBody","LoginPage","username","setUsername","GuestPage","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","Router"],"mappings":"sYAkBeA,MAhBMC,IAAsB,IAArB,IAAEC,EAAG,OAAEC,GAAQF,EACjC,OACEG,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,UAAQE,KAAK,OAAOC,GAAG,OAAOC,MAAOP,EAAKQ,SAAWC,GAAMR,EAAOQ,EAAEC,OAAOH,QACzEL,IAAAC,cAAA,UAAQI,MAAM,OAAM,OACpBL,IAAAC,cAAA,UAAQI,MAAM,QAAO,QACrBL,IAAAC,cAAA,UAAQI,MAAM,QAAO,QACrBL,IAAAC,cAAA,UAAQI,MAAM,SAAQ,SACtBL,IAAAC,cAAA,UAAQI,MAAM,OAAM,OACpBL,IAAAC,cAAA,UAAQI,MAAM,OAAM,OACpBL,IAAAC,cAAA,UAAQI,MAAM,OAAM,UCKbI,MAfGZ,IAAwB,IAAvB,KAAEa,EAAI,QAAEC,GAASd,EAEpC,OACEG,IAAAC,cAAA,OAAKC,UAAU,kBACrBF,IAAAC,cAAA,SACUW,KAAK,OACLR,GAAG,aACHD,KAAK,cACLE,MAAOK,EAAMJ,SAAWC,GAAMI,EAAQJ,EAAEC,OAAOH,W,KCgB1CQ,MArBUhB,IAAyB,IAAxB,eAAEiB,GAAgBjB,EAC1C,MAAOC,EAAKC,GAAUgB,mBAAS,QACxBL,EAAMC,GAAWI,mBAAS,IAUjC,OACEf,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAACL,EAAY,CAACE,IAAKA,EAAKC,OAAQA,IAChCC,IAAAC,cAACQ,EAAa,CAACC,KAAMA,EAAMC,QAASA,IACpCX,IAAAC,cAAA,UAAQW,KAAK,SAASI,QAZGC,KACvBnB,GAAOY,IACTI,EAAehB,EAAKY,GACpBX,EAAO,OACPY,EAAQ,OAQ6C,oBCH5CO,MAdKrB,IAAyC,IAAxC,aAAEsB,EAAY,iBAAEC,GAAkBvB,EACrD,OACEG,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAACY,EAAgB,CAACC,eAAgBM,IAElCpB,IAAAC,cAAA,OAAKoB,MAAO,CAAEC,QAAiC,IAAxBH,EAAaI,OAAe,OAAS,UACzDJ,EAAaK,IAAI,CAACC,EAAaC,IAC9B1B,IAAAC,cAAA,OAAK0B,IAAKD,GAAM,GAAAE,OAAKH,EAAY3B,IAAG,QAAA8B,OAAOH,EAAYf,W,MCiJlDmB,MAxJQhC,IAiBhB,IAjBiB,UACpBiC,EAAS,kBACTC,EAAiB,QACjBC,EAAO,oBACPC,EAAmB,YACnBC,EAAW,UACXC,EAAS,aACThB,EAAY,iBACZC,EAAgB,SAChBgB,EAAQ,iBACRC,EAAgB,QAChBC,EAAO,gBACPC,EAAe,KACfC,EAAI,QACJC,EAAO,SACPC,GAEH7C,EA8DG,OACIG,IAAAC,cAAA,QAAMyC,SA9BYnC,IAClBA,EAAEoC,iBAEqB,IAAnBX,EAAQT,OAKgB,IAAxBJ,EAAaI,OAtCrB,SAAyBO,EAAWc,GAChC,IAAIC,EAAQ,IAAIC,eAChBD,EAAME,mBAAqB,WACvB,GAAwB,IAApBC,KAAKC,WACL,GAAoB,MAAhBD,KAAKE,OACL,IACIC,QAAQC,IAAI,eAAiBJ,KAAKK,cAClC,IAAIC,EAAeC,KAAKC,MAAMR,KAAKK,cACnCT,EAAS,KAAMU,GACjB,MAAO/C,GACLqC,EAASrC,EAAG,WAGhBqC,EAAS,IAAIa,MAAM,+BAAiCT,KAAKE,QAAS,OAK9E,IAEIQ,EAAW,IAAIC,gBACnBD,EAASE,OAAO,YAAa9B,GAE7Be,EAAMgB,KAAK,OALD,6DAKc,GAExBhB,EAAMiB,iBAAiB,eAAgB,qCAEvCjB,EAAMkB,KAAKL,EAASM,YAgBpBC,CAAgBnC,EAAW,CAACoC,EAAOZ,KAC3BY,EACAf,QAAQe,MAAM,wBAAyBA,GAKvCZ,EAAa/B,OAAS,EACtB4C,MAAM,mEAGNzB,MAfJyB,MAAM,4CALNA,MAAM,wCA2BNnE,IAAAC,cAAA,SACIW,KAAK,OACLP,MAAOyB,EACPxB,SAAUyB,EACVqC,YAAY,mBACZC,UAAQ,IACZrE,IAAAC,cAAA,WAEAD,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,SACIW,KAAK,OACLP,MAAO8B,EACP7B,SAAU2B,EACVmC,YAAY,eAChBpE,IAAAC,cAAA,UAAQW,KAAK,SAASI,QAASkB,GAAa,QAGhDlC,IAAAC,cAAA,OACIC,UAAU,cACVmB,MAAO,CACPC,QAA4B,IAAnBU,EAAQT,OACX,OACA,UAELS,EAAQR,IAAI,CAAC8C,EAAQ5C,IAClB1B,IAAAC,cAAA,OAAK0B,IAAKD,EAAOxB,UAAU,eAAeoE,KAIlDtE,IAAAC,cAACiB,EAAW,CAACC,aAAcA,EAAcC,iBAAkBA,IAE3DpB,IAAAC,cAAA,SACIW,KAAK,OACLP,MAAO+B,EACP9B,SAAU+B,EACV+B,YAAY,WACZC,UAAQ,IAEZrE,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,UACIW,KAAK,SACLI,QAASA,IAAMuB,EAAgB,UAC/BrC,UAAuB,WAAZoC,EACT,SACA,IAAI,UAGVtC,IAAAC,cAAA,UACIW,KAAK,SACLI,QAASA,IAAMuB,EAAgB,WAC/BrC,UAAuB,YAAZoC,EACT,SACA,IAAI,YAKD,YAAZA,GAA0BtC,IAAAC,cAAA,SACvBW,KAAK,OACLP,MAAOmC,EACPlC,SAAWC,GAAMkC,EAAQlC,EAAEC,OAAOH,MAAMkE,UAAU,EAAG,IACrDH,YAAY,aACZC,UAAQ,IAEZrE,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQW,KAAK,UAAS,wBCHnB4D,MA/IcA,KACzB,MAAO1C,EACH2C,GAAgB1D,mBAAS,KACtBiB,EACH0C,GAAc3D,mBAAS,KACpBoB,EACHwC,GAAgB5D,mBAAS,KACtBI,EACHyD,GAAmB7D,mBAAS,KACzBqB,EACHyC,GAAe9D,mBAAS,KACrBuB,EACHwC,GAAc/D,mBAAS,WACpByB,EACHC,GAAW1B,mBAAS,IAClBgE,EAAWC,cA2EjB,OACIhF,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAC4B,EAAc,CACXC,UAAWA,EACXC,kBA9EmBkD,IAE3B,MAAMC,EAAWD,EACZzE,OACAH,MACA8E,QAAQ,MAAO,IACfZ,UAAU,EAAG,IAClBE,EAAaS,IAwELlD,QAASA,EACTC,oBAtEqBgD,IAC7B,MAAMC,EAAWD,EACZzE,OACAH,MACA+E,cACAD,QAAQ,MAAO,IACfZ,UAAU,EAAG,IAClBI,EAAaO,IAgELhD,YA7DYmD,KAChBlD,IACAuC,EAAW,IACJ1C,EACHG,IAEJwC,EAAa,MAwDTxC,UAAWA,EACXhB,aAAcA,EACdC,iBAtDiBH,CAACnB,EAAKY,KAC/BkE,EAAgBU,GAAoB,IAC7BA,EAAkB,CACjBxF,MACAY,WAmDA0B,SAAUA,EACVC,iBA/CY4C,IACpB,MAAMC,EAAWD,EAChBzE,OACAH,MACAkE,UAAU,EAAG,IACdM,EAAYK,IA2CJ5C,QAASA,EACTC,gBAzCiBD,IACzBwC,EAAWxC,GACK,YAAZA,GACAG,EAAQ,KAuCJD,KAAMA,EACNC,QAASA,EACTC,SArCS6C,KACjB,MAAMC,EAAiB,CACnB1D,UAAWA,EACXE,QAASA,EACTb,aAAcA,EACdiB,SAAUA,EACVE,QAASA,EACTE,KAAkB,YAAZF,EACAE,OACAiD,GAIVtC,QAAQC,IAAIG,KAAKmC,UAAUF,EAAgB,KAAM,IA6BzD,SAA2BA,EAAgBG,GACvC,IAAI9C,EAAQ,IAAIC,eAChBD,EAAME,mBAAqB,WACC,IAApBC,KAAKC,YAAoC,MAAhBD,KAAKE,SAC9BC,QAAQC,IAAI,qBACRuC,GACAA,MAKZ,IAGIjC,EAAW,IAAIC,gBACnBD,EAASE,OAAO,YAAa4B,EAAe1D,WAC5C4B,EAASE,OAAO,WAAY4B,EAAepD,UAC3CsB,EAASE,OAAO,UAAW4B,EAAelD,SAC1CoB,EAASE,OAAO,OAAQ4B,EAAehD,MAAQ,IAC/CkB,EAASE,OAAO,UAAWL,KAAKmC,UAAUF,EAAexD,UACzD0B,EAASE,OAAO,eAAgBL,KAAKmC,UAAUF,EAAerE,eAE9D0B,EAAMgB,KAAK,OAXD,6DAWc,GAGxBhB,EAAMiB,iBAAiB,eAAgB,qCAEvCjB,EAAMkB,KAAKL,EAASM,YAvDhB4B,CAAkBJ,EAAgB,KAC9BT,EAAS,IAADnD,OAAK4D,EAAe1D,UAAS,iB,MCAlC+D,MAtFOA,KAClB,MAAM,UAAC/D,GAAagE,eACbC,EACHC,GAAgBjF,mBAAS,MAiD7B,OAlBAkF,oBAAU,KAEDnE,EA/BT,SAAyBA,EAAWc,GAChC,IAAIC,EAAQ,IAAIC,eAChBD,EAAME,mBAAqB,WACvB,GAAwB,IAApBC,KAAKC,WACL,GAAoB,MAAhBD,KAAKE,OACL,IACI,IAAII,EAAeC,KAAKC,MAAMR,KAAKK,cACnCT,EAAS,KAAMU,GACjB,MAAO/C,GACLqC,EAASrC,EAAG,WAGhBqC,EAAS,IAAIa,MAAM,+BAAiCT,KAAKE,QAAS,OAK9E,IAEIQ,EAAW,IAAIC,gBACnBD,EAASE,OAAO,YAAa9B,GAE7Be,EAAMgB,KAAK,OALD,6DAKc,GAExBhB,EAAMiB,iBAAiB,eAAgB,qCAEvCjB,EAAMkB,KAAKL,EAASM,YAUpBC,CAAgBnC,GAAW,SAAUoC,EAAOgC,GACpChC,EACAf,QAAQe,MAAM,uBAAwBA,IAEtCf,QAAQC,IAAI,iBAAkB8C,GAC9BF,EAAaE,EAAK,QATtB/C,QAAQe,MAAM,gCAanB,CAACpC,IAECiE,EAKD/F,IAAAC,cAAA,OAAKC,UAAU,6BACXF,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,UAAK8F,EAAUjE,WACf9B,IAAAC,cAAA,OAAKC,UAAU,eACV6F,EACI/D,QACAR,IAAI,CAAC8C,EAAQ5C,IACV1B,IAAAC,cAAA,OAAK0B,IAAKD,EAAOxB,UAAU,eAAeoE,KAGtDtE,IAAAC,cAAA,OAAKC,UAAU,aACV6F,EACI5E,aACAK,IAAI,CAACC,EAAaC,IACf1B,IAAAC,cAAA,OAAK0B,IAAKD,GAAM,GAAAE,OAAKH,EAAY3B,IAAG,QAAA8B,OAAOH,EAAYf,SAGnEV,IAAAC,cAAA,SAAG,aAAW8F,EAAU3D,UACxBpC,IAAAC,cAAA,SAAG,YAAU8F,EAAUzD,UAE3BtC,IAAAC,cAAA,OAAKC,UAAU,WACXF,IAAAC,cAAA,UAAI,mBAEJD,IAAAC,cAAA,UAAQC,UAAU,QAAO,UA3B1BF,IAAAC,cAAA,WAAK,4C,4BCbLkG,MAnCUtG,IAAuD,IAAtD,KAACM,EAAI,QAAE6B,EAAO,aAAEb,EAAY,SAAEiB,EAAQ,QAAEE,GAAQzC,EACtE,MAAMuG,EAA+B,kBAAZ9D,GAAkD,YAA1BA,EAAQ+D,cACnDtB,EAAWC,cAKjB,OACIhF,IAAAC,cAAA,OAAKC,UAAU,qBAAqBc,QAJpBsF,KAChBvB,EAAS,IAADnD,OAAKzB,EAAI,YAIbH,IAAAC,cAAA,OAAKC,UAAU,mBACVkG,EACSpG,IAAAC,cAACsG,IAAe,CAACC,KAAMC,MACvBzG,IAAAC,cAACsG,IAAe,CAACC,KAAME,MACjC1G,IAAAC,cAAA,UAAKE,IAETH,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAACsG,IAAe,CAACC,KAAMG,MACvB3G,IAAAC,cAAA,YAAOmC,IAGXpC,IAAAC,cAAA,UACK+B,EAAQR,IAAI,CAAC8C,EAAQ5C,IAClB1B,IAAAC,cAAA,MAAI0B,IAAKD,GAAQ4C,KAGzBtE,IAAAC,cAAA,UACKkB,EAAaK,IAAI,CAACC,EAAaC,IAC5B1B,IAAAC,cAAA,MAAI0B,IAAKD,GAAM,GAAAE,OAAKH,EAAY3B,IAAG,QAAA8B,OAAOH,EAAYf,W,iBCiR3DkG,MA9SQA,KACnB,MAAOC,EACHC,GAAiB/F,mBAAS,KACvBoB,EACHwC,GAAgB5D,mBAAS,KACtBiB,EACH0C,GAAc3D,mBAAS,KACpBgG,EACHC,GAAmBjG,mBAAS,CAC5BkG,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,KAAK,EACLC,KAAK,EACLC,KAAK,KAEFjF,EACHwC,GAAc/D,mBAAS,SACpByG,EACHC,GAAmB1G,mBAAS,IAC1BgE,EAAWC,cA+BX0C,EAAmB5H,IACrBkH,EAAgBW,IAAQ,IACjBA,EACH,CAAC7H,IAAO6H,EAAS7H,OAInB8H,EAAuBtF,IACzBwC,EAAWxC,IAOTuF,EAAmBA,CAAC3D,EAAOgC,KACzBhC,EACAf,QAAQe,MAAM,uBAAwBA,IAEtCf,QAAQC,IAAI,gBAAiB8C,GAEzBA,GAAwB,kBAATA,IAAsB4B,MAAMC,QAAQ7B,GACnDuB,EAAgB,CAACvB,IAEjBuB,EAAgBvB,KAKtB8B,EAAkBC,sBACpBC,IAASrI,IAAoD,IAAnD,UAAEiC,EAAS,QAAEE,EAAO,aAAE+E,EAAY,QAAEzE,GAASzC,GAO3D,SAAwBsI,EAKrBvF,GAAW,IALW,UACrBd,EAAS,QACTE,EAAO,aACP+E,EAAY,QACZzE,GACH6F,EACG,MAEMzE,EAAW,IAAIC,gBAEjB7B,GACA4B,EAASE,OAAO,YAAa9B,GAG7BE,GAAWA,EAAQT,OAAS,GAC5BmC,EAASE,OAAO,UAAWL,KAAKmC,UAAU1D,IAG1C+E,GAAgBA,EAAaxF,OAAS,IACtCmC,EAASE,OAAO,OAAQL,KAAKmC,UAAUqB,IACvC5D,QAAQC,IAAIG,KAAKmC,UAAUqB,KAG5BzE,GAAuB,SAAZA,GACVoB,EAASE,OAAO,UAAWtB,GAG/B,MAAM8F,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,qCAEpBC,KAAM7E,GAGVP,QAAQC,IAAIM,EAASM,YACrBwE,MA9BY,4DA8BDJ,GAASK,KAAKC,IACrB,IAAKA,EAASC,GACV,MAAM,IAAIlF,MAAM,uBAAD7B,OAAwB8G,EAASxF,SAEpD,OAAOwF,EAASE,SAEfH,KAAKvC,GAAQtD,EAAS,KAAMsD,IAC5B2C,MAAM3E,GAAStB,EAASsB,EAAO,OAjDhCD,CAAgB,CAAEnC,YAAWE,UAAS+E,eAAczE,WAAWuF,IAChE,KACH,IA+DJ,OAZA5B,oBAAU,KAGN+B,EAAgB,CACZlG,UAAW+E,EACX7E,UACA+E,aAAc+B,OAAOC,QAAQhC,GAAciC,OAAOC,IAAA,IAAEnJ,EAAKoJ,GAAWD,EAAA,OAAKC,IAAY1H,IAAI2H,IAAA,IAAErJ,GAAIqJ,EAAA,OAAKrJ,IACpGwC,aAEL,CAACuE,EAAY7E,EAAS+E,EAAczE,EAAS0F,IAI5ChI,IAAAC,cAAA,OAAKC,UAAU,8BACXF,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,iBAERD,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,UAAQe,QA5FEoI,KACtBrE,EAAS,aA2FuC,gBACpC/E,IAAAC,cAAA,SACIW,KAAK,OACLP,MAAOwG,EACPvG,SAxIQ2E,IACxB,MAAMC,EAAWD,EACZzE,OACAH,MACA8E,QAAQ,MAAO,IACfZ,UAAU,EAAG,IAClBuC,EAAc5B,IAmIEd,YAAY,eAEpBpE,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OAAKC,UAAU,qBACVsH,EAAahG,IAAI,CAAC6H,EAAO3H,IAAW1B,IAAAC,cAACkG,EAAgB,CAClDxE,IAAKD,EACLvB,KAAMkJ,EAAMvH,UACZE,QAASqH,EAAMrH,QACfb,aAAckI,EAAMlI,aACpBiB,SAAUiH,EAAMjH,SAChBE,QAAS+G,EAAM/G,YAEvBtC,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,OAAKC,UAAU,WACXF,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,SACIW,KAAK,OACLP,MAAO8B,EACP7B,SApJC2E,IAC7B,MAAMC,EAAWD,EACZzE,OACAH,MACA+E,cACAD,QAAQ,MAAO,IACfZ,UAAU,EAAG,IAClBI,EAAaO,IA8Ied,YAAY,eAChBpE,IAAAC,cAAA,UAAQW,KAAK,SAASI,QA5I1BqE,KAChBlD,IAAcH,EAAQsH,SAASnH,KAC/BuC,EAAW,IACJ1C,EACHG,IAEJwC,EAAa,OAsIuD,QAEpD3E,IAAAC,cAAA,OACIC,UAAU,cACVmB,MAAO,CACPC,QAA4B,IAAnBU,EAAQT,OACX,OACA,UAELS,EAAQR,IAAI,CAAC8C,EAAQ5C,IAClB1B,IAAAC,cAAA,OAAK0B,IAAKD,EAAOxB,UAAU,eAAeoE,MAItDtE,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,SACIW,KAAK,WACLR,GAAG,SACHD,KAAK,MACLE,MAAM,MACNkJ,QAASxC,EAAaE,IACtB3G,SAAUA,IAAMoH,EAAgB,SACpC1H,IAAAC,cAAA,SAAOuJ,QAAQ,OAAM,QAEzBxJ,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,SACIW,KAAK,WACLR,GAAG,UACHD,KAAK,OACLE,MAAM,OACNkJ,QAASxC,EAAaG,KACtB5G,SAAUA,IAAMoH,EAAgB,UACpC1H,IAAAC,cAAA,SAAOuJ,QAAQ,QAAO,SAE1BxJ,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,SACIW,KAAK,WACLR,GAAG,YACHD,KAAK,OACLE,MAAM,OACNkJ,QAASxC,EAAaI,KACtB7G,SAAUA,IAAMoH,EAAgB,UACpC1H,IAAAC,cAAA,SAAOuJ,QAAQ,QAAO,SAE1BxJ,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,SACIW,KAAK,WACLR,GAAG,WACHD,KAAK,QACLE,MAAM,QACNkJ,QAASxC,EAAaK,MACtB9G,SAAUA,IAAMoH,EAAgB,WACpC1H,IAAAC,cAAA,SAAOuJ,QAAQ,SAAQ,UAE3BxJ,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,SACIW,KAAK,WACLR,GAAG,SACHD,KAAK,MACLE,MAAM,MACNkJ,QAASxC,EAAaM,IACtB/G,SAAUA,IAAMoH,EAAgB,SACpC1H,IAAAC,cAAA,SAAOuJ,QAAQ,OAAM,QAEzBxJ,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,SACIW,KAAK,WACLR,GAAG,WACHD,KAAK,MACLE,MAAM,MACNkJ,QAASxC,EAAaO,IACtBhH,SAAUA,IAAMoH,EAAgB,SACpC1H,IAAAC,cAAA,SAAOuJ,QAAQ,OAAM,QAEzBxJ,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,SACIW,KAAK,WACLR,GAAG,SACHD,KAAK,MACLE,MAAM,MACNkJ,QAASxC,EAAaQ,IACtBjH,SAAUA,IAAMoH,EAAgB,SACpC1H,IAAAC,cAAA,SAAOuJ,QAAQ,OAAM,SAG7BxJ,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,UACIW,KAAK,SACLI,QAASA,IAAM4G,EAAoB,UACnC1H,UAAuB,WAAZoC,EACT,SACA,IAAI,UAGVtC,IAAAC,cAAA,UACIW,KAAK,SACLI,QAASA,IAAM4G,EAAoB,WACnC1H,UAAuB,YAAZoC,EACT,SACA,IAAI,WAGVtC,IAAAC,cAAA,UACIW,KAAK,SACLI,QAASA,IAAM4G,EAAoB,QACnC1H,UAAuB,SAAZoC,EACT,SACA,IAAI,c,MCtQvBmH,MAhCf,WACI,MAAM1E,EAAWC,cAcjB,OACIhF,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,UAAQC,UAAU,SAASc,QAhBhB0I,KACnB3E,EAAS,eAemD,aAExD/E,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,UAAQC,UAAU,SAASc,QAfnB2I,KAChB5E,EAAS,YAcgD,UAErD/E,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,UAAQC,UAAU,SAASc,QAdnB4I,KAChB7E,EAAS,YAagD,wB,MC6BlD8E,MAtDf,WAEI,MAAOC,EAAOC,GAAYhJ,mBAAS,KAC5BiJ,EAAOC,GAAYlJ,mBAAS,KAC5BmJ,EAAOC,GAAYpJ,mBAAS,KAC5BqJ,EAAOC,GAAYtJ,mBAAS,KAC5BuJ,EAAUC,GAAexJ,mBAAS,IAiCzC,OACQf,IAAAC,cAAA,OAAKC,UAAU,sBACfF,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,QAAMyC,SAlCO8H,UACjBvF,EAAMtC,iBAEN,IACI,MAAM8H,EAAM,IAAI3H,eAChB2H,EAAI5G,KAAK,OAAQ,0DAA0D,GAC3E4G,EAAI3G,iBAAiB,eAAgB,oBAErC2G,EAAI1H,mBAAqB,WACrB,GAAI0H,EAAIxH,aAAeH,eAAe4H,KAClC,GAAmB,MAAfD,EAAIvH,OAAgB,CACpB,MAAMwF,EAAWnF,KAAKC,MAAMiH,EAAIpH,cAEf,OAAbqF,GACAvF,QAAQC,IAAI,4BAA6BsF,GACzCiC,SAASC,OAAS,UAAYlC,GAE9BvF,QAAQe,MAAM,qBAGlBf,QAAQe,MAAM,sBAAuBuG,EAAIvH,SAKrD,MAAM2H,EAActH,KAAKmC,UAAU,CAAEoE,QAAOE,QAAOE,QAAOE,QAAOE,aACjEG,EAAI1G,KAAK8G,GACX,MAAO3G,GACLf,QAAQe,MAAM,kBAAmBA,MAO7BlE,IAAAC,cAAA,SAAOW,KAAK,OAAOwD,YAAY,aAAa/D,MAAOyJ,EAAOxJ,SAAWC,GAAMwJ,EAASxJ,EAAEC,OAAOH,SAC7FL,IAAAC,cAAA,SAAOW,KAAK,OAAOwD,YAAY,YAAY/D,MAAO2J,EAAO1J,SAAWC,GAAM0J,EAAS1J,EAAEC,OAAOH,SAC5FL,IAAAC,cAAA,SAAOW,KAAK,OAAOwD,YAAY,QAAQ/D,MAAO6J,EAAO5J,SAAWC,GAAM4J,EAAS5J,EAAEC,OAAOH,SACxFL,IAAAC,cAAA,SAAOW,KAAK,QAAQwD,YAAY,oBAAoB/D,MAAO+J,EAAO9J,SAAWC,GAAM8J,EAAS9J,EAAEC,OAAOH,SACrGL,IAAAC,cAAA,SAAOW,KAAK,WAAWwD,YAAY,WAAW/D,MAAOiK,EAAUhK,SAAWC,GAAMgK,EAAYhK,EAAEC,OAAOH,SACrGL,IAAAC,cAAA,UAAQW,KAAK,UAAS,e,MCGvBkK,MAnDf,WAEI,MAAOC,EAAUC,GAAejK,mBAAS,KAClCuJ,EAAUC,GAAexJ,mBAAS,IAkCzC,OACIf,IAAAC,cAAA,OAAKC,UAAU,mBACfF,IAAAC,cAAA,UAAI,SACAD,IAAAC,cAAA,QAAMyC,SAnCQuC,IAClBA,EAAMtC,iBAEN,IACI,MAAM8H,EAAM,IAAI3H,eAChB2H,EAAI5G,KAAK,OAAQ,uDAAuD,GACxE4G,EAAI3G,iBAAiB,eAAgB,oBAErC2G,EAAI1H,mBAAqB,WACrB,GAAI0H,EAAIxH,aAAeH,eAAe4H,KAClC,GAAmB,MAAfD,EAAIvH,OAAgB,CACpB,MAAMwF,EAAWnF,KAAKC,MAAMiH,EAAIpH,cAEf,OAAbqF,GACAvF,QAAQC,IAAI,mCAAoCsF,GAChDiC,SAASC,OAAS,UAAYlC,GAE9BvF,QAAQe,MAAM,4BAGlBf,QAAQe,MAAM,kBAAmBuG,EAAIvH,SAKjD,MAAM2H,EAActH,KAAKmC,UAAU,CAAEqF,WAAUT,aAC/CG,EAAI1G,KAAK8G,GACX,MAAO3G,GACLf,QAAQe,MAAM,kBAAmBA,MAQ7BlE,IAAAC,cAAA,SAAOW,KAAK,OAAOwD,YAAY,WAAW/D,MAAO0K,EAAUzK,SAAWC,GAAMyK,EAAYzK,EAAEC,OAAOH,SACjGL,IAAAC,cAAA,SAAOW,KAAK,WAAWwD,YAAY,WAAW/D,MAAOiK,EACjDhK,SAAWC,GAAMgK,EAAYhK,EAAEC,OAAOH,SAC1CL,IAAAC,cAAA,UAAQW,KAAK,UAAS,Y,MCrCvBqK,MARf,WACI,OACIjL,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,qBCkBDiL,MAdf,WACI,OACQlL,IAAAC,cAACkL,IAAM,KACHnL,IAAAC,cAACmL,IAAK,CAACC,KAAK,QAAQC,QAAStL,IAAAC,cAAE2G,EAAc,QAC7C5G,IAAAC,cAACmL,IAAK,CAACC,KAAK,UAAUC,QAAStL,IAAAC,cAAEuE,EAAoB,QACrDxE,IAAAC,cAACmL,IAAK,CAACC,KAAK,mBAAmBC,QAAStL,IAAAC,cAAE4F,EAAa,QACvD7F,IAAAC,cAACmL,IAAK,CAACC,KAAK,YAAYC,QAAStL,IAAAC,cAAE4J,EAAY,QAC/C7J,IAAAC,cAACmL,IAAK,CAACC,KAAK,SAASC,QAAStL,IAAAC,cAAE6K,EAAS,QACzC9K,IAAAC,cAACmL,IAAK,CAACC,KAAK,SAASC,QAAStL,IAAAC,cAAEgL,EAAS,QACzCjL,IAAAC,cAACmL,IAAK,CAACC,KAAK,IAAIC,QAAStL,IAAAC,cAAEwJ,EAAQ,UCPpC8B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhD,KAAK5I,IAAkD,IAAjD,OAAE6L,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASjM,EACpE6L,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,M,OCADO,IAASC,WAAWrB,SAASsB,eAAe,SACpDC,OACDlM,IAAAC,cAACkM,IAAM,KACLnM,IAAAC,cAACiL,EAAG,QAMVK,M","file":"static/js/main.6f0b0835.chunk.js","sourcesContent":["import React from 'react';\n\nconst DaySelection = ({ day, setDay }) => {\n    return (\n      <div className=\"day-selection\">\n          <select name=\"days\" id=\"days\" value={day} onChange={(e) => setDay(e.target.value)}>\n            <option value=\"Mon\">Mon</option>\n            <option value=\"Tues\">Tues</option>\n            <option value=\"Weds\">Weds</option>\n            <option value=\"Thurs\">Thurs</option>\n            <option value=\"Fri\">Fri</option>\n            <option value=\"Sat\">Sat</option>\n            <option value=\"Sun\">Sun</option>\n          </select>\n          </div>\n      );\n    };\n    \nexport default DaySelection;","import React from 'react';\n\nconst TimeSelection = ({ time, setTime }) => {\n\n    return (\n      <div className=\"time-selection\">\n<input \n          type=\"time\" \n          id=\"meetinTime\" \n          name=\"meetingTime\"\n          value={time} onChange={(e) => setTime(e.target.value)}\n        />\n      </div>\n        \n      );\n    };\n    \n    export default TimeSelection;","import React, { useState } from 'react';\nimport DaySelection from \"./DaySelection\";\nimport TimeSelection from \"./TimeSelection\";\nimport '../../assets/study-group/DayTime.css'; \n\nconst DayTimeSelection = ({ onAddSelection }) => { \n  const [day, setDay] = useState('Mon');\n  const [time, setTime] = useState('');\n\n  const handleAddMeetingTime = () => {\n    if (day && time) {\n      onAddSelection(day, time); \n      setDay('Mon');\n      setTime('');\n    }\n  };\n\n  return (\n    <div className=\"day-time-selection\">\n      <DaySelection day={day} setDay={setDay} />\n      <TimeSelection time={time} setTime={setTime} />\n      <button type=\"button\" onClick={handleAddMeetingTime}>Add Day & Time</button>\n    </div>\n  );\n};\n\nexport default DayTimeSelection;\n","import React from 'react';\nimport DayTimeSelection from './DayTimeSelection';\nimport '../../assets/study-group/DayTime.css'; \n\nconst DayTimeComp = ({ meetingTimes, onAddMeetingTime }) => {\n  return (\n    <div className=\"day-time-comp\">\n      <DayTimeSelection onAddSelection={onAddMeetingTime} />\n\n      <div style={{ display: meetingTimes.length === 0 ? 'none' : 'block' }}>\n        {meetingTimes.map((meetingTime, index) => (\n          <div key={index}>{`${meetingTime.day} at ${meetingTime.time}`}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DayTimeComp;\n","import React from 'react';\nimport DayTimeComp from '../../../../components/InputField/DayTimeComp';\nimport '../../../../assets/study-group/StudyGroup.css';\n\nconst StudyGroupForm = ({\n    groupName,\n    onGroupNameChange,\n    courses,\n    onCourseInputChange,\n    onAddCourse,\n    newCourse,\n    meetingTimes,\n    onAddMeetingTime,\n    location,\n    onLocationChange,\n    privacy,\n    onPrivacyChange,\n    code,\n    setCode,\n    onSubmit\n    /* ... other props ... */\n}) => {\n    // Form JSX\n\n    function fetchStudyGroup(groupName, callback) {\n        var xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                if (this.status === 200) {\n                    try {\n                        console.log(\"from server:\" + this.responseText);\n                        var responseData = JSON.parse(this.responseText);\n                        callback(null, responseData);\n                    } catch (e) {\n                        callback(e, null);\n                    }\n                } else {\n                    callback(new Error(\"Request failed with status: \" + this.status), null);\n                }\n            }\n        };\n\n        var url = \"http://localhost:8080/ProjectTest/StudyGroupReturnServlet\";\n\n        var formData = new URLSearchParams();\n        formData.append(\"groupName\", groupName);\n\n        xhttp.open(\"POST\", url, true);\n\n        xhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n        xhttp.send(formData.toString());\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (courses.length === 0) {\n            alert(\"At least one course must be added.\");\n            return;\n        }\n\n        if (meetingTimes.length === 0) {\n            alert(\"At least one meeting time must be added.\");\n            return;\n        }\n\n        fetchStudyGroup(groupName, (error, responseData) => {\n            if (error) {\n                console.error(\"Error fetching data: \", error);\n                return;\n            }\n\n            // If the group name already exists\n            if (responseData.length > 0) {\n                alert(\"This group name already exists. Please choose a different name.\");\n            } else {\n                // Group name does not exist, proceed with the form submission\n                onSubmit();\n            }\n        });\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={groupName}\n                onChange={onGroupNameChange}\n                placeholder=\"Enter Group Name\"\n                required/>\n            <br></br>\n\n            <div className=\"course-input\">\n                <input\n                    type=\"text\"\n                    value={newCourse}\n                    onChange={onCourseInputChange}\n                    placeholder=\"Add Course\"/>\n                <button type=\"button\" onClick={onAddCourse}>Add</button>\n            </div>\n            {/* List of added courses */}\n            <div\n                className=\"course-list\"\n                style={{\n                display: courses.length === 0\n                    ? 'none'\n                    : 'block'\n            }}>\n                {courses.map((course, index) => (\n                    <div key={index} className=\"course-item\">{course}</div>\n                ))}\n            </div>\n\n            <DayTimeComp meetingTimes={meetingTimes} onAddMeetingTime={onAddMeetingTime}/>\n\n            <input\n                type=\"text\"\n                value={location}\n                onChange={onLocationChange}\n                placeholder=\"Location\"\n                required/>\n\n            <div className=\"privacy-buttons\">\n                <button\n                    type=\"button\"\n                    onClick={() => onPrivacyChange('PUBLIC')}\n                    className={privacy === 'PUBLIC'\n                    ? 'active'\n                    : ''}>\n                    Public\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => onPrivacyChange('PRIVATE')}\n                    className={privacy === 'PRIVATE'\n                    ? 'active'\n                    : ''}>\n                    Private\n                </button>\n            </div>\n\n            {privacy === 'PRIVATE' && (<input\n                type=\"text\"\n                value={code}\n                onChange={(e) => setCode(e.target.value.substring(0, 6))}\n                placeholder=\"Enter Code\"\n                required/>)}\n\n            <br></br>\n            <button type=\"submit\">Create Study Group</button>\n        </form>\n    );\n\n};\n\nexport default StudyGroupForm;\n","import React, {useState} from 'react';\nimport StudyGroupForm from '../components/StudyGroupForm/StudyGroupForm';\nimport {useNavigate} from 'react-router-dom';\n\nconst CreateStudyGroupPage = () => {\n    const [groupName,\n        setGroupName] = useState('');\n    const [courses,\n        setCourses] = useState([]);\n    const [newCourse,\n        setNewCourse] = useState('');\n    const [meetingTimes,\n        setMeetingTimes] = useState([]);\n    const [location,\n        setLocation] = useState('');\n    const [privacy,\n        setPrivacy] = useState('PUBLIC');\n    const [code,\n        setCode] = useState('');\n    const navigate = useNavigate();\n\n    const handleGroupNameChange = (event) => {\n        // Replace spaces with an empty string\n        const newValue = event\n            .target\n            .value\n            .replace(/\\s/g, '')\n            .substring(0, 20);\n        setGroupName(newValue);\n    };\n\n    const handleCourseInputChange = (event) => {\n        const newValue = event\n            .target\n            .value\n            .toUpperCase()\n            .replace(/\\s/g, '')\n            .substring(0, 10);\n        setNewCourse(newValue);\n    };\n\n    const handleAddCourse = () => {\n        if (newCourse) {\n            setCourses([\n                ...courses,\n                newCourse\n            ]);\n            setNewCourse('');\n        }\n    };\n\n    const handleAddMeetingTime = (day, time) => {\n        setMeetingTimes(prevMeetingTimes => [\n            ...prevMeetingTimes, {\n                day,\n                time\n            }\n        ]);\n    };\n\n    const handleLocation = (event) => {\n        const newValue = event\n        .target\n        .value\n        .substring(0, 20);\n        setLocation(newValue);\n    }\n\n    const handlePrivacyChange = (privacy) => {\n        setPrivacy(privacy);\n        if (privacy !== 'PRIVATE') {\n            setCode('');\n        }\n    };\n\n    const handleSubmit = () => {\n        const studyGroupData = {\n            groupName: groupName,\n            courses: courses,\n            meetingTimes: meetingTimes,\n            location: location,\n            privacy: privacy,\n            code: privacy === 'PRIVATE'\n                ? code\n                : undefined\n        };\n\n        \n        console.log(JSON.stringify(studyGroupData, null, 2));\n        sendDataToBackend(studyGroupData, () => {\n            navigate(`/${studyGroupData.groupName}/view`);\n        });\n    };\n\n    return (\n        <div>\n            <h1>Create Study Group</h1>\n            <StudyGroupForm\n                groupName={groupName}\n                onGroupNameChange={handleGroupNameChange}\n                courses={courses}\n                onCourseInputChange={handleCourseInputChange}\n                onAddCourse={handleAddCourse}\n                newCourse={newCourse}\n                meetingTimes={meetingTimes}\n                onAddMeetingTime={handleAddMeetingTime}\n                location={location}\n                onLocationChange={handleLocation}\n                privacy={privacy}\n                onPrivacyChange={handlePrivacyChange}\n                code={code}\n                setCode={setCode}\n                onSubmit={handleSubmit}/>\n        </div>\n    );\n};\n\nfunction sendDataToBackend(studyGroupData, onSuccess) {\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n            console.log(\"sent data success\");\n            if (onSuccess) {\n                onSuccess();\n            }\n        }\n    };\n\n    var url = \"http://localhost:8080/ProjectTest/StudyGroupCreateServlet\";\n\n    // Prepare URL-encoded data\n    var formData = new URLSearchParams();\n    formData.append(\"groupName\", studyGroupData.groupName);\n    formData.append(\"location\", studyGroupData.location);\n    formData.append(\"privacy\", studyGroupData.privacy);\n    formData.append(\"code\", studyGroupData.code || \"\"); // handle optional code\n    formData.append(\"courses\", JSON.stringify(studyGroupData.courses));\n    formData.append(\"meetingTimes\", JSON.stringify(studyGroupData.meetingTimes));\n\n    xhttp.open(\"POST\", url, true);\n\n    // Set Content-Type for form data\n    xhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n\n    xhttp.send(formData.toString()); // line 108\n}\n\nexport default CreateStudyGroupPage;\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport '../../../assets/study-group/FullStudyPage.css';\n\nconst FullStudyPage = () => {\n    const {groupName} = useParams();\n    const [groupInfo,\n        setGroupInfo] = useState(null);\n\n    function fetchStudyGroup(groupName, callback) {\n        var xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                if (this.status === 200) {\n                    try {\n                        var responseData = JSON.parse(this.responseText);\n                        callback(null, responseData);\n                    } catch (e) {\n                        callback(e, null);\n                    }\n                } else {\n                    callback(new Error(\"Request failed with status: \" + this.status), null);\n                }\n            }\n        };\n\n        var url = \"http://localhost:8080/ProjectTest/StudyGroupReturnServlet\";\n\n        var formData = new URLSearchParams();\n        formData.append(\"groupName\", groupName);\n\n        xhttp.open(\"POST\", url, true);\n\n        xhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n        xhttp.send(formData.toString());\n    }\n\n    useEffect(() => {\n        // Ensure groupName is not undefined or null\n        if (!groupName) {\n            console.error(\"Group name is not provided.\");\n            return;\n        }\n\n        fetchStudyGroup(groupName, function (error, data) {\n            if (error) {\n                console.error(\"Error fetching data:\", error);\n            } else {\n                console.log(\"Received data:\", data);\n                setGroupInfo(data[0]); // Update the state with the fetched data\n            }\n        });\n\n    }, [groupName]);\n\n    if (!groupInfo) {\n        return <div>Ensure your group exists... Loading....</div>;\n    }\n\n    return (\n        <div className=\"container-full-study-page\">\n            <div className=\"group-info\">\n                <h1>{groupInfo.groupName}</h1>\n                <div className=\"course-list\">\n                    {groupInfo\n                        .courses\n                        .map((course, index) => (\n                            <div key={index} className=\"course-item\">{course}</div>\n                        ))}\n                </div>\n                <div className=\"time-list\">\n                    {groupInfo\n                        .meetingTimes\n                        .map((meetingTime, index) => (\n                            <div key={index}>{`${meetingTime.day} at ${meetingTime.time}`}</div>\n                        ))}\n                </div>\n                <p>Location: {groupInfo.location}</p>\n                <p>Privacy: {groupInfo.privacy}</p>\n            </div>\n            <div className=\"sidebar\">\n                <h2>Current Members</h2>\n\n                <button className=\"join\">Join</button>\n            </div>\n        </div>\n    );\n};\n\nexport default FullStudyPage;\n","import React from 'react';\nimport '../../../assets/study-group/StudyGroupWidget.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faLock, faLockOpen} from '@fortawesome/free-solid-svg-icons';\nimport {faLocationDot} from '@fortawesome/free-solid-svg-icons';\n\nconst StudyGroupWidget = ({name, courses, meetingTimes, location, privacy}) => {\n    const isPrivate = typeof privacy === 'string' && privacy.toLowerCase() === 'private';\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate(`/${name}/view`);\n    };\n    return (\n        <div className=\"study-group-widget\" onClick={handleClick}>\n            <div className=\"icon-text-combo\">\n                {isPrivate\n                        ? <FontAwesomeIcon icon={faLock}/>\n                        : <FontAwesomeIcon icon={faLockOpen}/>}\n                <h3>{name}</h3>\n            </div>\n            <div className=\"icon-text-combo\">\n                <FontAwesomeIcon icon={faLocationDot} />\n                <span>{location}</span>\n            </div>\n\n            <ul>\n                {courses.map((course, index) => (\n                    <li key={index}>{course}</li>\n                ))}\n            </ul>\n            <ul>\n                {meetingTimes.map((meetingTime, index) => (\n                    <li key={index}>{`${meetingTime.day} at ${meetingTime.time}`}</li>\n                ))}\n            </ul>\n            \n        </div>\n    );\n};\n\nexport default StudyGroupWidget;","import React, {useState, useEffect, useCallback} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport '../../../assets/study-group/FullStudyPage.css';\nimport '../../../assets/study-group/AllStudyGroups.css';\nimport StudyGroupWidget from '../components/StudyGroupWidget';\nimport debounce from 'lodash.debounce';\n\nconst AllStudyGroups = () => {\n    const [searchTerm,\n        setSearchTerm] = useState('');\n    const [newCourse,\n        setNewCourse] = useState('');\n    const [courses,\n        setCourses] = useState([]);\n    const [selectedDays,\n        setSelectedDays] = useState({\n        Mon: false,\n        Tues: false,\n        Weds: false,\n        Thurs: false,\n        Fri: false,\n        Sat: false,\n        Sun: false\n    });\n    const [privacy,\n        setPrivacy] = useState('BOTH');\n    const [queryResults,\n        setQueryResults] = useState([]);\n    const navigate = useNavigate();\n\n    const handleSearchChange = (event) => {\n        const newValue = event\n            .target\n            .value\n            .replace(/\\s/g, '')\n            .substring(0, 20);\n        setSearchTerm(newValue);\n    };\n\n    const handleCourseInputChange = (event) => {\n        const newValue = event\n            .target\n            .value\n            .toUpperCase()\n            .replace(/\\s/g, '')\n            .substring(0, 10);\n        setNewCourse(newValue);\n    };\n\n    const handleAddCourse = () => {\n        if (newCourse && !courses.includes(newCourse)) {\n            setCourses([\n                ...courses,\n                newCourse\n            ]);\n            setNewCourse('');\n        }\n    };\n\n    const handleDayChange = (day) => {\n        setSelectedDays(prevDays => ({\n            ...prevDays,\n            [day]: !prevDays[day]\n        }));\n    };\n\n    const handlePrivacyChange = (privacy) => {\n        setPrivacy(privacy);\n    };\n\n    const handleCreateClick = () => {\n        navigate('/create')\n    };\n\n    const callbackFunction = (error, data) => {\n        if (error) {\n            console.error(\"Error fetching data:\", error);\n        } else {\n            console.log(\"Fetched data:\", data);\n\n            if (data && typeof data === 'object' && !Array.isArray(data)) {\n                setQueryResults([data]);\n            } else {\n                setQueryResults(data);\n            }\n        }\n    };\n\n    const debouncedSearch = useCallback(\n        debounce(({ groupName, courses, selectedDays, privacy }) => {\n            fetchStudyGroup({ groupName, courses, selectedDays, privacy }, callbackFunction);\n        }, 200),\n        [] \n    );\n    \n    \n    function fetchStudyGroup({\n        groupName,\n        courses,\n        selectedDays,\n        privacy\n    }, callback) {\n        const url = \"http://localhost:8080/ProjectTest/StudyGroupReturnServlet\";\n\n        const formData = new URLSearchParams();\n\n        if (groupName) {\n            formData.append(\"groupName\", groupName);\n        }\n\n        if (courses && courses.length > 0) {\n            formData.append(\"courses\", JSON.stringify(courses));\n        }\n\n        if (selectedDays && selectedDays.length > 0) {\n            formData.append(\"days\", JSON.stringify(selectedDays));\n            console.log(JSON.stringify(selectedDays));\n        }\n\n        if(privacy && privacy !== \"BOTH\"){\n            formData.append(\"privacy\", privacy);\n        }\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formData\n        };\n\n        console.log(formData.toString());\n        fetch(url, options).then(response => {\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            return response.json();\n        })\n            .then(data => callback(null, data))\n            .catch(error => callback(error, null));\n    }\n\n    // Fetch data when filter parameters are added\n    useEffect(() => {\n\n    \n        debouncedSearch({\n            groupName: searchTerm,\n            courses,\n            selectedDays: Object.entries(selectedDays).filter(([day, isSelected]) => isSelected).map(([day]) => day),\n            privacy\n        });\n    }, [searchTerm, courses, selectedDays, privacy, debouncedSearch]);\n    \n\n    return (\n        <div className=\"container-all-study-groups\">\n            <div>\n                <h1>Study Groups</h1>\n            </div>\n            <div className=\"info\">\n                <div className=\"search-bar\">\n                    <button onClick={handleCreateClick}>Create Group</button>\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        onChange={handleSearchChange}\n                        placeholder=\"Search...\"/>\n                </div>\n                <div className=\"info-filter\">\n                    <div className=\"study-group-views\">\n                        {queryResults.map((group, index) => (<StudyGroupWidget\n                            key={index}\n                            name={group.groupName}\n                            courses={group.courses}\n                            meetingTimes={group.meetingTimes}\n                            location={group.location}\n                            privacy={group.privacy}/>))}\n                    </div>\n                    <div className=\"filter-menu\">\n                        <h2>Filters</h2>\n                        <div className=\"courses\">\n                            <h3>Courses:</h3>\n                            <div className=\"course-input\">\n                                <input\n                                    type=\"text\"\n                                    value={newCourse}\n                                    onChange={handleCourseInputChange}\n                                    placeholder=\"Add Course\"/>\n                                <button type=\"button\" onClick={handleAddCourse}>Add</button>\n                            </div>\n                            <div\n                                className=\"course-list\"\n                                style={{\n                                display: courses.length === 0\n                                    ? 'none'\n                                    : 'block'\n                            }}>\n                                {courses.map((course, index) => (\n                                    <div key={index} className=\"course-item\">{course}</div>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"days\">\n                            <h3>Days:</h3>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"monday\"\n                                    name=\"mon\"\n                                    value=\"Mon\"\n                                    checked={selectedDays.Mon}\n                                    onChange={() => handleDayChange('Mon')}/>\n                                <label htmlFor=\"mon\">Mon</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"tuesday\"\n                                    name=\"tues\"\n                                    value=\"Tues\"\n                                    checked={selectedDays.Tues}\n                                    onChange={() => handleDayChange('Tues')}/>\n                                <label htmlFor=\"tues\">Tues</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"wednesday\"\n                                    name=\"weds\"\n                                    value=\"Weds\"\n                                    checked={selectedDays.Weds}\n                                    onChange={() => handleDayChange('Weds')}/>\n                                <label htmlFor=\"weds\">Weds</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"thursday\"\n                                    name=\"thurs\"\n                                    value=\"Thurs\"\n                                    checked={selectedDays.Thurs}\n                                    onChange={() => handleDayChange('Thurs')}/>\n                                <label htmlFor=\"thurs\">Thurs</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"friday\"\n                                    name=\"fri\"\n                                    value=\"Fri\"\n                                    checked={selectedDays.Fri}\n                                    onChange={() => handleDayChange('Fri')}/>\n                                <label htmlFor=\"fri\">Fri</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"saturday\"\n                                    name=\"sat\"\n                                    value=\"Sat\"\n                                    checked={selectedDays.Sat}\n                                    onChange={() => handleDayChange('Sat')}/>\n                                <label htmlFor=\"sat\">Sat</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"sunday\"\n                                    name=\"sun\"\n                                    value=\"Sun\"\n                                    checked={selectedDays.Sun}\n                                    onChange={() => handleDayChange('Sun')}/>\n                                <label htmlFor=\"sun\">Sun</label>\n                            </div>\n                        </div>\n                        <div className=\"privacy-buttons\">\n                            <button\n                                type=\"button\"\n                                onClick={() => handlePrivacyChange('PUBLIC')}\n                                className={privacy === 'PUBLIC'\n                                ? 'active'\n                                : ''}>\n                                Public\n                            </button>\n                            <button\n                                type=\"button\"\n                                onClick={() => handlePrivacyChange('PRIVATE')}\n                                className={privacy === 'PRIVATE'\n                                ? 'active'\n                                : ''}>\n                                Private\n                            </button>\n                            <button\n                                type=\"button\"\n                                onClick={() => handlePrivacyChange('BOTH')}\n                                className={privacy === 'BOTH'\n                                ? 'active'\n                                : ''}>\n                                Both\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AllStudyGroups;\n","import React from 'react';\nimport '../../../assets/login/HomePage.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction HomePage() {\n    const navigate = useNavigate();\n\n    const handleRegister = () => {\n        navigate('/register');\n    };\n\n    const handleLogin = () => {\n        navigate('/login');\n    };\n\n    const handleGuest = () => {\n        navigate('/guest');\n    };\n\n    return (\n        <div>\n            <h1>Welcome Trojans</h1>\n            <div className=\"welcome-container\">\n                <button className=\"button\" onClick={handleRegister}>Register</button>\n            </div>\n            <div className=\"welcome-container\">\n                <button className=\"button\" onClick={handleLogin}>Login</button>\n            </div>\n            <div className=\"welcome-container\">\n                <button className=\"button\" onClick={handleGuest}>Continue as Guest</button>\n            </div>\n        </div>\n    );\n    \n}\n\nexport default HomePage;\n","import React from 'react';\nimport { useState } from 'react';\nimport '../../../assets/login/RegisterPage.css';\n\nfunction RegisterPage() {\n\n    const [fname, setFname] = useState('');\n    const [lname, setLname] = useState('');\n    const [major, setMajor] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const xhr = new XMLHttpRequest();\n            xhr.open('POST', 'http://localhost:8080/StudyGroupsFinalProj_v2/Register', true);\n            xhr.setRequestHeader('Content-Type', 'application/json');\n        \n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    if (xhr.status === 200) {\n                        const response = JSON.parse(xhr.responseText);\n        \n                        if (response !== \"-1\") {\n                            console.log('Login successful. UserID:', response);\n                            document.cookie = \"UserID=\" + response;\n                        } else {\n                            console.error('Login failed');\n                        }\n                    } else {\n                        console.error('Registration failed', xhr.status);\n                    }\n                }\n            };\n        \n            const requestBody = JSON.stringify({ fname, lname, major, email, password });\n            xhr.send(requestBody);\n        } catch (error) {\n            console.error('Error occurred:', error);\n        }    \n    };\n    return (\n            <div className=\"register-container\">\n            <h2>Register</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"First Name\" value={fname} onChange={(e) => setFname(e.target.value)}/>\n                <input type=\"text\" placeholder=\"Last Name\" value={lname} onChange={(e) => setLname(e.target.value)}/>\n                <input type=\"text\" placeholder=\"Major\" value={major} onChange={(e) => setMajor(e.target.value)}/>\n                <input type=\"email\" placeholder=\"USC Email Address\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default RegisterPage;\n","import React from 'react';\nimport { useState } from 'react';\nimport '../../../assets/login/LoginPage.css';\n\nfunction LoginPage() {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        try {\n            const xhr = new XMLHttpRequest();\n            xhr.open('POST', 'http://localhost:8080/StudyGroupsFinalProj_v2/Login', true);\n            xhr.setRequestHeader('Content-Type', 'application/json');\n        \n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    if (xhr.status === 200) {\n                        const response = JSON.parse(xhr.responseText);\n        \n                        if (response !== \"-1\") {\n                            console.log('Registration successful. UserID:', response);\n                            document.cookie = \"UserID=\" + response;\n                        } else {\n                            console.error('Registration failed');\n                        }\n                    } else {\n                        console.error('Request failed:', xhr.status);\n                    }\n                }\n            };\n        \n            const requestBody = JSON.stringify({ username, password });\n            xhr.send(requestBody);\n        } catch (error) {\n            console.error('Error occurred:', error);\n        }    \n    };\n\n    return (\n        <div className=\"login-container\">\n        <h2>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Password\" value={password}\n                    onChange={(e) => setPassword(e.target.value)}/>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n\n}\n\nexport default LoginPage;","import React from 'react';\nimport '../../../assets/login/GuestPage.css';\n\nfunction GuestPage() {\n    return (\n        <div>\n            <h2>Welcome, Guest!</h2>\n        </div>\n    );\n}\n\nexport default GuestPage;\n","import React from 'react';\nimport { Routes, Route} from \"react-router-dom\";\nimport CreateStudyGroupPage from './features/StudyGroupManagement/views/CreateStudyGroupPage';\nimport FullStudyPage from './features/StudyGroupManagement/views/FullStudyPage';\nimport AllStudyGroups from './features/StudyGroupManagement/views/AllStudyGroups';\nimport HomePage from './features/LoginRegistration/views/HomePage';\nimport RegisterPage from './features/LoginRegistration/views/RegisterPage'; // Your Register component\nimport LoginPage from './features/LoginRegistration/views/LoginPage'; // Your Login component\nimport GuestPage from './features/LoginRegistration/views/GuestPage'; // Your Guest component\n\nfunction App() {\n    return (\n            <Routes>\n                <Route path=\"/home\" element={< AllStudyGroups />}/>\n                <Route path=\"/create\" element={< CreateStudyGroupPage />}/>\n                <Route path=\"/:groupName/view\" element={< FullStudyPage />}/>\n                <Route path=\"/register\" element={< RegisterPage />}/>\n                <Route path=\"/login\" element={< LoginPage />}/>\n                <Route path=\"/guest\" element={< GuestPage />}/>\n                <Route path=\"/\" element={< HomePage />}/>\n            </Routes>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './assets/index.css';\nimport App from './App';\nimport reportWebVitals from './utils/reportWebVitals';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Router>\n      <App />\n    </Router>\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example, reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}