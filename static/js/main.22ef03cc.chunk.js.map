{"version":3,"sources":["components/InputField/DaySelection.js","components/InputField/TimeSelection.js","components/InputField/DayTimeSelection.js","components/InputField/DayTimeComp.js","features/StudyGroupManagement/components/CourseList.js","features/StudyGroupManagement/components/StudyGroupForm.js","features/StudyGroupManagement/views/CreateStudyGroupPage.js","features/StudyGroupManagement/views/FullStudyPage.js","features/StudyGroupManagement/components/StudyGroupWidget.js","features/StudyGroupManagement/views/AllStudyGroups.js","features/LoginRegistration/views/HomePage.js","features/LoginRegistration/views/RegisterPage.js","features/LoginRegistration/views/LoginPage.js","features/LoginRegistration/views/GuestPage.js","App.js","utils/reportWebVitals.js","components/Navbar/NavigationBar.js","index.js"],"names":["DaySelection","_ref","day","setDay","React","createElement","className","name","id","value","onChange","e","target","TimeSelection","time","setTime","type","DayTimeSelection","onAddSelection","useState","onClick","handleAddMeetingTime","DayTimeComp","meetingTimes","onAddMeetingTime","style","display","length","map","meetingTime","index","key","concat","CourseList","courses","onRemoveCourse","course","FontAwesomeIcon","icon","faXmark","marginLeft","StudyGroupForm","groupName","onGroupNameChange","onCourseInputChange","onAddCourse","newCourse","removeCourse","location","onLocationChange","privacy","onPrivacyChange","code","setCode","onSubmit","preventDefault","callback","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","console","log","responseText","responseData","JSON","parse","Error","formData","URLSearchParams","append","open","setRequestHeader","send","toString","fetchStudyGroup","error","alert","placeholder","required","substring","CreateStudyGroupPage","setGroupName","setCourses","setNewCourse","setMeetingTimes","setLocation","setPrivacy","navigate","useNavigate","event","newValue","replace","toUpperCase","handleAddCourse","courseIndex","newCourses","filter","_","prevMeetingTimes","handleSubmit","studyGroupData","undefined","stringify","onSuccess","sendDataToBackend","FullStudyPage","useParams","groupInfo","setGroupInfo","useEffect","data","StudyGroupWidget","isPrivate","toLowerCase","handleClick","faLock","faLockOpen","faLocationDot","AllStudyGroups","searchTerm","setSearchTerm","selectedDays","setSelectedDays","Mon","Tues","Weds","Thurs","Fri","Sat","Sun","queryResults","setQueryResults","handleDayChange","prevDays","handlePrivacyChange","callbackFunction","Array","isArray","debouncedSearch","useCallback","debounce","_ref2","options","method","headers","body","fetch","then","response","ok","json","catch","Object","entries","_ref3","isSelected","_ref4","handleCreateClick","group","includes","checked","htmlFor","HomePage","handleRegister","handleLogin","handleGuest","RegisterPage","fname","setFname","lname","setLname","major","setMajor","email","setEmail","password","setPassword","async","xhr","DONE","document","cookie","requestBody","LoginPage","username","setUsername","GuestPage","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","NavigationBar","isLoggedIn","setIsLoggedIn","handleNavigation","Fragment","faHome","fontSize","margin","faUsers","faSignOutAlt","faUserCircle","ReactDOM","createRoot","getElementById","render","Router"],"mappings":"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","file":"static/js/main.22ef03cc.chunk.js","sourcesContent":["import React from 'react';\n\nconst DaySelection = ({ day, setDay }) => {\n    return (\n      <div className=\"day-selection\">\n          <select name=\"days\" id=\"days\" value={day} onChange={(e) => setDay(e.target.value)}>\n            <option value=\"Mon\">Mon</option>\n            <option value=\"Tues\">Tues</option>\n            <option value=\"Weds\">Weds</option>\n            <option value=\"Thurs\">Thurs</option>\n            <option value=\"Fri\">Fri</option>\n            <option value=\"Sat\">Sat</option>\n            <option value=\"Sun\">Sun</option>\n          </select>\n          </div>\n      );\n    };\n    \nexport default DaySelection;","import React from 'react';\n\nconst TimeSelection = ({ time, setTime }) => {\n\n    return (\n      <div className=\"time-selection\">\n<input \n          type=\"time\" \n          id=\"meetinTime\" \n          name=\"meetingTime\"\n          value={time} onChange={(e) => setTime(e.target.value)}\n        />\n      </div>\n        \n      );\n    };\n    \n    export default TimeSelection;","import React, { useState } from 'react';\nimport DaySelection from \"./DaySelection\";\nimport TimeSelection from \"./TimeSelection\";\nimport '../../assets/study-group/DayTime.css'; \n\nconst DayTimeSelection = ({ onAddSelection }) => { \n  const [day, setDay] = useState('Mon');\n  const [time, setTime] = useState('');\n\n  const handleAddMeetingTime = () => {\n    if (day && time) {\n      onAddSelection(day, time); \n      setDay('Mon');\n      setTime('');\n    }\n  };\n\n  return (\n    <div className=\"day-time-selection\">\n      <DaySelection day={day} setDay={setDay} />\n      <TimeSelection time={time} setTime={setTime} />\n      <button type=\"button\" onClick={handleAddMeetingTime}>Add Day & Time</button>\n    </div>\n  );\n};\n\nexport default DayTimeSelection;\n","import React from 'react';\nimport DayTimeSelection from './DayTimeSelection';\nimport '../../assets/study-group/DayTime.css'; \n\nconst DayTimeComp = ({ meetingTimes, onAddMeetingTime }) => {\n  return (\n    <div className=\"day-time-comp\">\n      <DayTimeSelection onAddSelection={onAddMeetingTime} />\n\n      <div style={{ display: meetingTimes.length === 0 ? 'none' : 'block' }}>\n        {meetingTimes.map((meetingTime, index) => (\n          <div key={index}>{`${meetingTime.day} at ${meetingTime.time}`}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DayTimeComp;\n","import React from 'react';\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst CourseList = ({ courses, onRemoveCourse }) => {\n  return (\n    <div className=\"course-list\" style={{\n      display: courses.length === 0\n          ? 'none'\n          : 'block'\n  }}>\n      {courses.map((course, index) => (\n        <div key={index} className=\"course-item\">\n          {course}\n          {onRemoveCourse && (\n            <FontAwesomeIcon icon={faXmark} onClick={() => onRemoveCourse(index)} style={{ marginLeft: '10px' }}/>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CourseList;\n","import React from 'react';\nimport DayTimeComp from '../../../components/InputField/DayTimeComp';\nimport '../../../assets/study-group/StudyGroup.css';\nimport CourseList from './CourseList';\n\n\nconst StudyGroupForm = ({\n    groupName,\n    onGroupNameChange,\n    courses,\n    onCourseInputChange,\n    onAddCourse,\n    newCourse,\n    removeCourse,\n    meetingTimes,\n    onAddMeetingTime,\n    location,\n    onLocationChange,\n    privacy,\n    onPrivacyChange,\n    code,\n    setCode,\n    onSubmit\n    /* ... other props ... */\n}) => {\n    // Form JSX\n\n    function fetchStudyGroup(groupName, callback) {\n        var xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                if (this.status === 200) {\n                    try {\n                        console.log(\"from server:\" + this.responseText);\n                        var responseData = JSON.parse(this.responseText);\n                        callback(null, responseData);\n                    } catch (e) {\n                        callback(e, null);\n                    }\n                } else {\n                    callback(new Error(\"Request failed with status: \" + this.status), null);\n                }\n            }\n        };\n\n        var url = \"http://localhost:8080/ProjectTest/StudyGroupReturnServlet\";\n\n        var formData = new URLSearchParams();\n        formData.append(\"groupName\", groupName);\n\n        xhttp.open(\"POST\", url, true);\n\n        xhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n        xhttp.send(formData.toString());\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (courses.length === 0) {\n            alert(\"At least one course must be added.\");\n            return;\n        }\n\n        if (meetingTimes.length === 0) {\n            alert(\"At least one meeting time must be added.\");\n            return;\n        }\n\n        fetchStudyGroup(groupName, (error, responseData) => {\n            if (error) {\n                console.error(\"Error fetching data: \", error);\n                return;\n            }\n\n            // If the group name already exists\n            if (responseData.length > 0) {\n                alert(\"This group name already exists. Please choose a different name.\");\n            } else {\n                // Group name does not exist, proceed with the form submission\n                onSubmit();\n            }\n        });\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={groupName}\n                onChange={onGroupNameChange}\n                placeholder=\"Enter Group Name\"\n                required/>\n            <br></br>\n\n            <div className=\"course-input\">\n                <input\n                    type=\"text\"\n                    value={newCourse}\n                    onChange={onCourseInputChange}\n                    placeholder=\"Add Course\"/>\n                <button type=\"button\" onClick={onAddCourse}>Add</button>\n            </div>\n            <CourseList courses={courses} onRemoveCourse={removeCourse}/>\n\n            <DayTimeComp meetingTimes={meetingTimes} onAddMeetingTime={onAddMeetingTime}/>\n\n            <input\n                type=\"text\"\n                value={location}\n                onChange={onLocationChange}\n                placeholder=\"Location\"\n                required/>\n\n            <div className=\"privacy-buttons\">\n                <button\n                    type=\"button\"\n                    onClick={() => onPrivacyChange('PUBLIC')}\n                    className={privacy === 'PUBLIC'\n                    ? 'active'\n                    : ''}>\n                    Public\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => onPrivacyChange('PRIVATE')}\n                    className={privacy === 'PRIVATE'\n                    ? 'active'\n                    : ''}>\n                    Private\n                </button>\n            </div>\n\n            {privacy === 'PRIVATE' && (<input\n                type=\"text\"\n                value={code}\n                onChange={(e) => setCode(e.target.value.substring(0, 6))}\n                placeholder=\"Enter Code\"\n                required/>)}\n\n            <br></br>\n            <button type=\"submit\">Create Study Group</button>\n        </form>\n    );\n\n};\n\nexport default StudyGroupForm;\n","import React, {useState} from 'react';\nimport StudyGroupForm from '../components/StudyGroupForm';\nimport {useNavigate} from 'react-router-dom';\n\nconst CreateStudyGroupPage = () => {\n    const [groupName,\n        setGroupName] = useState('');\n    const [courses,\n        setCourses] = useState([]);\n    const [newCourse,\n        setNewCourse] = useState('');\n    const [meetingTimes,\n        setMeetingTimes] = useState([]);\n    const [location,\n        setLocation] = useState('');\n    const [privacy,\n        setPrivacy] = useState('PUBLIC');\n    const [code,\n        setCode] = useState('');\n    const navigate = useNavigate();\n\n    const handleGroupNameChange = (event) => {\n        // Replace spaces with an empty string\n        const newValue = event\n            .target\n            .value\n            .replace(/\\s/g, '')\n            .substring(0, 20);\n        setGroupName(newValue);\n    };\n\n    const handleCourseInputChange = (event) => {\n        const newValue = event\n            .target\n            .value\n            .toUpperCase()\n            .replace(/\\s/g, '')\n            .substring(0, 10);\n        setNewCourse(newValue);\n    };\n\n    const handleAddCourse = () => {\n        if (newCourse) {\n            setCourses([\n                ...courses,\n                newCourse\n            ]);\n            setNewCourse('');\n        }\n    };\n\n    const handleRemoveCourse = (courseIndex) => {\n        const newCourses = courses.filter((_, index) => index !== courseIndex);\n        setCourses(newCourses);\n    };\n\n    const handleAddMeetingTime = (day, time) => {\n        setMeetingTimes(prevMeetingTimes => [\n            ...prevMeetingTimes, {\n                day,\n                time\n            }\n        ]);\n    };\n\n    const handleLocation = (event) => {\n        const newValue = event\n        .target\n        .value\n        .substring(0, 20);\n        setLocation(newValue);\n    }\n\n    const handlePrivacyChange = (privacy) => {\n        setPrivacy(privacy);\n        if (privacy !== 'PRIVATE') {\n            setCode('');\n        }\n    };\n\n    const handleSubmit = () => {\n        const studyGroupData = {\n            groupName: groupName,\n            courses: courses,\n            meetingTimes: meetingTimes,\n            location: location,\n            privacy: privacy,\n            code: privacy === 'PRIVATE'\n                ? code\n                : undefined\n        };\n\n        \n        console.log(JSON.stringify(studyGroupData, null, 2));\n        sendDataToBackend(studyGroupData, () => {\n            navigate(`/${studyGroupData.groupName}/view`);\n        });\n    };\n\n    return (\n        <div>\n            <h1>Create Study Group</h1>\n            <StudyGroupForm\n                groupName={groupName}\n                onGroupNameChange={handleGroupNameChange}\n                courses={courses}\n                onCourseInputChange={handleCourseInputChange}\n                onAddCourse={handleAddCourse}\n                newCourse={newCourse}\n                removeCourse={handleRemoveCourse}\n                meetingTimes={meetingTimes}\n                onAddMeetingTime={handleAddMeetingTime}\n                location={location}\n                onLocationChange={handleLocation}\n                privacy={privacy}\n                onPrivacyChange={handlePrivacyChange}\n                code={code}\n                setCode={setCode}\n                onSubmit={handleSubmit}/>\n        </div>\n    );\n};\n\nfunction sendDataToBackend(studyGroupData, onSuccess) {\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n            console.log(\"sent data success\");\n            if (onSuccess) {\n                onSuccess();\n            }\n        }\n    };\n\n    var url = \"http://localhost:8080/ProjectTest/StudyGroupCreateServlet\";\n\n    // Prepare URL-encoded data\n    var formData = new URLSearchParams();\n    formData.append(\"groupName\", studyGroupData.groupName);\n    formData.append(\"location\", studyGroupData.location);\n    formData.append(\"privacy\", studyGroupData.privacy);\n    formData.append(\"code\", studyGroupData.code || \"\"); // handle optional code\n    formData.append(\"courses\", JSON.stringify(studyGroupData.courses));\n    formData.append(\"meetingTimes\", JSON.stringify(studyGroupData.meetingTimes));\n\n    xhttp.open(\"POST\", url, true);\n\n    // Set Content-Type for form data\n    xhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n\n    xhttp.send(formData.toString()); // line 108\n}\n\nexport default CreateStudyGroupPage;\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport '../../../assets/study-group/FullStudyPage.css';\nimport CourseList from '../components/CourseList';\n\nconst FullStudyPage = () => {\n    const {groupName} = useParams();\n    const [groupInfo,\n        setGroupInfo] = useState(null);\n\n    function fetchStudyGroup(groupName, callback) {\n        var xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                if (this.status === 200) {\n                    try {\n                        var responseData = JSON.parse(this.responseText);\n                        callback(null, responseData);\n                    } catch (e) {\n                        callback(e, null);\n                    }\n                } else {\n                    callback(new Error(\"Request failed with status: \" + this.status), null);\n                }\n            }\n        };\n\n        var url = \"http://localhost:8080/ProjectTest/StudyGroupReturnServlet\";\n\n        var formData = new URLSearchParams();\n        formData.append(\"groupName\", groupName);\n\n        xhttp.open(\"POST\", url, true);\n\n        xhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n        xhttp.send(formData.toString());\n    }\n\n    useEffect(() => {\n        // Ensure groupName is not undefined or null\n        if (!groupName) {\n            console.error(\"Group name is not provided.\");\n            return;\n        }\n\n        fetchStudyGroup(groupName, function (error, data) {\n            if (error) {\n                console.error(\"Error fetching data:\", error);\n            } else {\n                console.log(\"Received data:\", data);\n                setGroupInfo(data[0]); // Update the state with the fetched data\n            }\n        });\n\n    }, [groupName]);\n\n    if (!groupInfo) {\n        return <div>Ensure your group exists... Loading....</div>;\n    }\n\n    return (\n        <div className=\"container-full-study-page\">\n            <div className=\"group-info\">\n                <h1>{groupInfo.groupName}</h1>\n                <CourseList courses={groupInfo.courses} />\n                <div className=\"time-list\">\n                    {groupInfo\n                        .meetingTimes\n                        .map((meetingTime, index) => (\n                            <div key={index}>{`${meetingTime.day} at ${meetingTime.time}`}</div>\n                        ))}\n                </div>\n                <p>Location: {groupInfo.location}</p>\n                <p>Privacy: {groupInfo.privacy}</p>\n            </div>\n            <div className=\"sidebar\">\n                <h2>Current Members</h2>\n\n                <button className=\"join\">Join</button>\n            </div>\n        </div>\n    );\n};\n\nexport default FullStudyPage;\n","import React from 'react';\nimport '../../../assets/study-group/StudyGroupWidget.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faLock, faLockOpen} from '@fortawesome/free-solid-svg-icons';\nimport {faLocationDot} from '@fortawesome/free-solid-svg-icons';\n\nconst StudyGroupWidget = ({name, courses, meetingTimes, location, privacy}) => {\n    const isPrivate = typeof privacy === 'string' && privacy.toLowerCase() === 'private';\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate(`/${name}/view`);\n    };\n    return (\n        <div className=\"study-group-widget\" onClick={handleClick}>\n            <div className=\"icon-text-combo\">\n                {isPrivate\n                        ? <FontAwesomeIcon icon={faLock}/>\n                        : <FontAwesomeIcon icon={faLockOpen}/>}\n                <h3>{name}</h3>\n            </div>\n            <div className=\"icon-text-combo\">\n                <FontAwesomeIcon icon={faLocationDot} />\n                <span>{location}</span>\n            </div>\n\n            <ul>\n                {courses.map((course, index) => (\n                    <li key={index}>{course}</li>\n                ))}\n            </ul>\n            <ul>\n                {meetingTimes.map((meetingTime, index) => (\n                    <li key={index}>{`${meetingTime.day} at ${meetingTime.time}`}</li>\n                ))}\n            </ul>\n            \n        </div>\n    );\n};\n\nexport default StudyGroupWidget;","import React, {useState, useEffect, useCallback} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport '../../../assets/study-group/FullStudyPage.css';\nimport '../../../assets/study-group/AllStudyGroups.css';\nimport StudyGroupWidget from '../components/StudyGroupWidget';\nimport debounce from 'lodash.debounce';\nimport CourseList from '../components/CourseList';\n\nconst AllStudyGroups = () => {\n    const [searchTerm,\n        setSearchTerm] = useState('');\n    const [newCourse,\n        setNewCourse] = useState('');\n    const [courses,\n        setCourses] = useState([]);\n    const [selectedDays,\n        setSelectedDays] = useState({\n        Mon: false,\n        Tues: false,\n        Weds: false,\n        Thurs: false,\n        Fri: false,\n        Sat: false,\n        Sun: false\n    });\n    const [privacy,\n        setPrivacy] = useState('BOTH');\n    const [queryResults,\n        setQueryResults] = useState([]);\n    const navigate = useNavigate();\n\n    const handleSearchChange = (event) => {\n        const newValue = event\n            .target\n            .value\n            .replace(/\\s/g, '')\n            .substring(0, 20);\n        setSearchTerm(newValue);\n    };\n\n    const handleCourseInputChange = (event) => {\n        const newValue = event\n            .target\n            .value\n            .toUpperCase()\n            .replace(/\\s/g, '')\n            .substring(0, 10);\n        setNewCourse(newValue);\n    };\n\n    const handleAddCourse = () => {\n        if (newCourse && !courses.includes(newCourse)) {\n            setCourses([\n                ...courses,\n                newCourse\n            ]);\n            setNewCourse('');\n        }\n    };\n\n    const handleRemoveCourse = (courseIndex) => {\n        const newCourses = courses.filter((_, index) => index !== courseIndex);\n        setCourses(newCourses);\n    };\n\n    const handleDayChange = (day) => {\n        setSelectedDays(prevDays => ({\n            ...prevDays,\n            [day]: !prevDays[day]\n        }));\n    };\n\n    const handlePrivacyChange = (privacy) => {\n        setPrivacy(privacy);\n    };\n\n    const handleCreateClick = () => {\n        navigate('/create')\n    };\n\n    const callbackFunction = (error, data) => {\n        if (error) {\n            console.error(\"Error fetching data:\", error);\n        } else {\n            console.log(\"Fetched data:\", data);\n\n            if (data && typeof data === 'object' && !Array.isArray(data)) {\n                setQueryResults([data]);\n            } else {\n                setQueryResults(data);\n            }\n        }\n    };\n\n    const debouncedSearch = useCallback(\n        debounce(({ groupName, courses, selectedDays, privacy }) => {\n            fetchStudyGroup({ groupName, courses, selectedDays, privacy }, callbackFunction);\n        }, 200),\n        [] \n    );\n    \n    \n    function fetchStudyGroup({\n        groupName,\n        courses,\n        selectedDays,\n        privacy\n    }, callback) {\n        const url = \"http://localhost:8080/ProjectTest/StudyGroupReturnServlet\";\n\n        const formData = new URLSearchParams();\n\n        if (groupName) {\n            formData.append(\"groupName\", groupName);\n        }\n\n        if (courses && courses.length > 0) {\n            formData.append(\"courses\", JSON.stringify(courses));\n        }\n\n        if (selectedDays && selectedDays.length > 0) {\n            const meetingTimes = selectedDays.map(day => ({\n                day: day,\n                time: \"12:00\" // Dummy value for time\n            }));\n        \n            formData.append(\"meetingTimes\", JSON.stringify(meetingTimes));\n            console.log(JSON.stringify(meetingTimes));\n        }\n\n        if(privacy && privacy !== \"BOTH\"){\n            formData.append(\"privacy\", privacy);\n        }\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formData\n        };\n\n        console.log(formData.toString());\n        fetch(url, options).then(response => {\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            return response.json();\n        })\n            .then(data => callback(null, data))\n            .catch(error => callback(error, null));\n    }\n\n    // Fetch data when filter parameters are added\n    useEffect(() => {\n\n    \n        debouncedSearch({\n            groupName: searchTerm,\n            courses,\n            selectedDays: Object.entries(selectedDays).filter(([day, isSelected]) => isSelected).map(([day]) => day),\n            privacy\n        });\n    }, [searchTerm, courses, selectedDays, privacy, debouncedSearch]);\n    \n\n    return (\n        <div className=\"container-all-study-groups\">\n            <div>\n                <h1>Study Groups</h1>\n            </div>\n            <div className=\"info\">\n                <div className=\"search-bar\">\n                    <button onClick={handleCreateClick}>Create Group</button>\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        onChange={handleSearchChange}\n                        placeholder=\"Search...\"/>\n                </div>\n                <div className=\"info-filter\">\n                    <div className=\"study-group-views\">\n                        {queryResults.map((group, index) => (<StudyGroupWidget\n                            key={index}\n                            name={group.groupName}\n                            courses={group.courses}\n                            meetingTimes={group.meetingTimes}\n                            location={group.location}\n                            privacy={group.privacy}/>))}\n                    </div>\n                    <div className=\"filter-menu\">\n                        <h2>Filters</h2>\n                        <div className=\"courses\">\n                            <h3>Courses:</h3>\n                            <div className=\"course-input\">\n                                <input\n                                    type=\"text\"\n                                    value={newCourse}\n                                    onChange={handleCourseInputChange}\n                                    placeholder=\"Add Course\"/>\n                                <button type=\"button\" onClick={handleAddCourse}>Add</button>\n                            </div>\n                            <CourseList courses={courses} onRemoveCourse={handleRemoveCourse}/>\n                        </div>\n                        <div className=\"days\">\n                            <h3>Days:</h3>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"monday\"\n                                    name=\"mon\"\n                                    value=\"Mon\"\n                                    checked={selectedDays.Mon}\n                                    onChange={() => handleDayChange('Mon')}/>\n                                <label htmlFor=\"mon\">Mon</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"tuesday\"\n                                    name=\"tues\"\n                                    value=\"Tues\"\n                                    checked={selectedDays.Tues}\n                                    onChange={() => handleDayChange('Tues')}/>\n                                <label htmlFor=\"tues\">Tues</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"wednesday\"\n                                    name=\"weds\"\n                                    value=\"Weds\"\n                                    checked={selectedDays.Weds}\n                                    onChange={() => handleDayChange('Weds')}/>\n                                <label htmlFor=\"weds\">Weds</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"thursday\"\n                                    name=\"thurs\"\n                                    value=\"Thurs\"\n                                    checked={selectedDays.Thurs}\n                                    onChange={() => handleDayChange('Thurs')}/>\n                                <label htmlFor=\"thurs\">Thurs</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"friday\"\n                                    name=\"fri\"\n                                    value=\"Fri\"\n                                    checked={selectedDays.Fri}\n                                    onChange={() => handleDayChange('Fri')}/>\n                                <label htmlFor=\"fri\">Fri</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"saturday\"\n                                    name=\"sat\"\n                                    value=\"Sat\"\n                                    checked={selectedDays.Sat}\n                                    onChange={() => handleDayChange('Sat')}/>\n                                <label htmlFor=\"sat\">Sat</label>\n                            </div>\n                            <div className=\"checkbox-wrapper\">\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"sunday\"\n                                    name=\"sun\"\n                                    value=\"Sun\"\n                                    checked={selectedDays.Sun}\n                                    onChange={() => handleDayChange('Sun')}/>\n                                <label htmlFor=\"sun\">Sun</label>\n                            </div>\n                        </div>\n                        <div className=\"privacy-buttons\">\n                            <button\n                                type=\"button\"\n                                onClick={() => handlePrivacyChange('PUBLIC')}\n                                className={privacy === 'PUBLIC'\n                                ? 'active'\n                                : ''}>\n                                Public\n                            </button>\n                            <button\n                                type=\"button\"\n                                onClick={() => handlePrivacyChange('PRIVATE')}\n                                className={privacy === 'PRIVATE'\n                                ? 'active'\n                                : ''}>\n                                Private\n                            </button>\n                            <button\n                                type=\"button\"\n                                onClick={() => handlePrivacyChange('BOTH')}\n                                className={privacy === 'BOTH'\n                                ? 'active'\n                                : ''}>\n                                Both\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AllStudyGroups;\n","import React from 'react';\nimport '../../../assets/login/HomePage.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction HomePage() {\n    const navigate = useNavigate();\n\n    const handleRegister = () => {\n        navigate('/register');\n    };\n\n    const handleLogin = () => {\n        navigate('/login');\n    };\n\n    const handleGuest = () => {\n        navigate('/guest');\n    };\n\n    return (\n        <div>\n            <div className=\"welcome-container\">\n                <button className=\"button\" onClick={handleRegister}>Register</button>\n            </div>\n            <div className=\"welcome-container\">\n                <button className=\"button\" onClick={handleLogin}>Login</button>\n            </div>\n            <div className=\"welcome-container\">\n                <button className=\"button\" onClick={handleGuest}>Continue as Guest</button>\n            </div>\n        </div>\n    );\n    \n}\n\nexport default HomePage;\n","import React from 'react';\nimport { useState } from 'react';\nimport '../../../assets/login/RegisterPage.css';\n\nfunction RegisterPage() {\n\n    const [fname, setFname] = useState('');\n    const [lname, setLname] = useState('');\n    const [major, setMajor] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const xhr = new XMLHttpRequest();\n            xhr.open('POST', 'http://localhost:8080/StudyGroupsFinalProj_v2/Register', true);\n            xhr.setRequestHeader('Content-Type', 'application/json');\n        \n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    if (xhr.status === 200) {\n                        const response = JSON.parse(xhr.responseText);\n        \n                        if (response !== \"-1\") {\n                            console.log('Login successful. UserID:', response);\n                            document.cookie = \"UserID=\" + response;\n                        } else {\n                            console.error('Login failed');\n                        }\n                    } else {\n                        console.error('Registration failed', xhr.status);\n                    }\n                }\n            };\n        \n            const requestBody = JSON.stringify({ fname, lname, major, email, password });\n            xhr.send(requestBody);\n        } catch (error) {\n            console.error('Error occurred:', error);\n        }    \n    };\n    return (\n            <div className=\"register-container\">\n            <h2>Register</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"First Name\" value={fname} onChange={(e) => setFname(e.target.value)}/>\n                <input type=\"text\" placeholder=\"Last Name\" value={lname} onChange={(e) => setLname(e.target.value)}/>\n                <input type=\"text\" placeholder=\"Major\" value={major} onChange={(e) => setMajor(e.target.value)}/>\n                <input type=\"email\" placeholder=\"USC Email Address\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default RegisterPage;\n","import React from 'react';\nimport { useState } from 'react';\nimport '../../../assets/login/LoginPage.css';\n\nfunction LoginPage() {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        try {\n            const xhr = new XMLHttpRequest();\n            xhr.open('POST', 'http://localhost:8080/StudyGroupsFinalProj_v2/Login', true);\n            xhr.setRequestHeader('Content-Type', 'application/json');\n        \n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    if (xhr.status === 200) {\n                        const response = JSON.parse(xhr.responseText);\n        \n                        if (response !== \"-1\") {\n                            console.log('Registration successful. UserID:', response);\n                            document.cookie = \"UserID=\" + response;\n                        } else {\n                            console.error('Registration failed');\n                        }\n                    } else {\n                        console.error('Request failed:', xhr.status);\n                    }\n                }\n            };\n        \n            const requestBody = JSON.stringify({ username, password });\n            xhr.send(requestBody);\n        } catch (error) {\n            console.error('Error occurred:', error);\n        }    \n    };\n\n    return (\n        <div className=\"login-container\">\n        <h2>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Password\" value={password}\n                    onChange={(e) => setPassword(e.target.value)}/>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n\n}\n\nexport default LoginPage;","import React from 'react';\nimport '../../../assets/login/GuestPage.css';\n\nfunction GuestPage() {\n    return (\n        <div>\n            <h2>Welcome, Guest!</h2>\n        </div>\n    );\n}\n\nexport default GuestPage;\n","import React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport CreateStudyGroupPage from './features/StudyGroupManagement/views/CreateStudyGroupPage';\nimport FullStudyPage from './features/StudyGroupManagement/views/FullStudyPage';\nimport AllStudyGroups from './features/StudyGroupManagement/views/AllStudyGroups';\nimport HomePage from './features/LoginRegistration/views/HomePage';\nimport RegisterPage from './features/LoginRegistration/views/RegisterPage'; \nimport LoginPage from './features/LoginRegistration/views/LoginPage'; \nimport GuestPage from './features/LoginRegistration/views/GuestPage'; \n\nfunction App() {\n  return (\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<AllStudyGroups />} />\n        <Route path=\"/create\" element={<CreateStudyGroupPage />} />\n        <Route path=\"/:groupName/view\" element={<FullStudyPage />} />\n        <Route path=\"/reg\" element={<HomePage />} />\n        <Route path=\"/register\" element={<RegisterPage />} />\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/guest\" element={<GuestPage />} />\n      </Routes>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from 'react';\nimport '../../assets/NavigationBar.css';\nimport { useNavigate } from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faHome, faUsers, faUserCircle, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction NavigationBar() {\n    const navigate = useNavigate();\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        // Check if the user is logged in\n        const cookie = document.cookie.includes('first=');\n        setIsLoggedIn(cookie);\n    }, []);\n\n    const handleNavigation = (path) => {\n        navigate(path);\n    };\n\n    return (\n        <header>\n            <div>\n                <h1>StudyManager</h1>\n            </div>\n            <div>\n                {isLoggedIn ? (\n                    <>\n                        <FontAwesomeIcon icon={faHome} style={{ fontSize: '30px', margin: '0 5px' }} onClick={() => navigate('/home')} />\n                        <FontAwesomeIcon icon={faUsers} style={{ fontSize: '30px', margin: '0 5px' }} onClick={() => handleNavigation('/:groupName/view')} />\n                        <FontAwesomeIcon icon={faSignOutAlt} style={{ fontSize: '30px', margin: '0 5px' }} onClick={() => handleNavigation('Logout')} />\n                    </>\n                ) : (\n                    <>\n                        <FontAwesomeIcon icon={faHome} style={{ fontSize: '30px', margin: '0 5px' }} onClick={() => handleNavigation('/home')} />\n                        <FontAwesomeIcon icon={faUsers} style={{ fontSize: '30px', margin: '0 5px' }} onClick={() => handleNavigation('/create')} />\n                        <FontAwesomeIcon icon={faUserCircle} style={{ fontSize: '30px', margin: '0 5px' }} onClick={() => handleNavigation('/reg')} />\n                    </>\n                )}\n            </div>\n        </header>\n    );\n    \n}\n\nexport default NavigationBar\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './assets/index.css';\nimport App from './App';\nimport reportWebVitals from './utils/reportWebVitals';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport NavigationBar from './components/Navbar/NavigationBar';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Router>\n      <NavigationBar />\n      <App />\n    </Router>\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example, reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}